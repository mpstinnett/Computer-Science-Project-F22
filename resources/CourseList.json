[{"courseNumber":"CS 2340","courseName":"Computer Architecture","courseDescription":"CS 2340 Computer Architecture (3 semester credit hours) This course introduces the concepts of computer architecture by going through multiple levels of abstraction, and the numbering systems and their basic computations. It focuses on the instruction-set architecture of the MIPS machine, including MIPS assembly programming, translation between MIPS and C, and between MIPS and machine code. General topics include performance calculation, processor datapath, pipelining, and memory hierarchy. Credit cannot be received for both courses, (CS 2340 or SE 2340) and (CE 4304 or EE 4304). Prerequisites: (CE 1337 or CS 1337) with a grade of C or better or equivalent and (CE 2305 or CS 2305) with a grade of C or better. (Same as SE 2340) (3-0) S","coursePreReqs":[],"classType":"A","activeStatus":true},{"courseNumber":"CS 5303","courseName":"Computer Science I","courseDescription":"CS 5303 Computer Science I (3 semester credit hours) Computer science problem solving. The structure and nature of algorithms and their corresponding computer program implementation. Programming in a high level block-structured language (e.g., PASCAL, Ada, C++, or JAVA). Elementary data structures: arrays, records, linked lists, trees, stacks and queues. Prerequisite: ENCS majors only. (3-0) R","coursePreReqs":[],"classType":"A","activeStatus":true},{"courseNumber":"CS 5333","courseName":"Discrete Structures","courseDescription":"CS 5333 Discrete Structures (3 semester credit hours) Mathematical foundations of computer science. Logic, sets, relations, graphs and algebraic structures. Combinatorics and metrics for performance evaluation of algorithms. Prerequisite: ENCS majors only. (3-0) S","coursePreReqs":[],"classType":"A","activeStatus":true},{"courseNumber":"CS 5343","courseName":"Algorithm Analysis and Data Structures","courseDescription":"CS 5343 Algorithm Analysis and Data Structures (3 semester credit hours) Formal specifications and representation of lists, arrays, trees, graphs, multilinked structures, strings, and recursive pattern structures. Analysis of associated algorithms. Sorting and searching, file structures. Relational data models. Prerequisite: CS 5303. Prerequisite or Corequisite: CS 5333. (3-0) S","coursePreReqs":["CS 5303","CS 5333"],"classType":"A","activeStatus":true},{"courseNumber":"CS 5348","courseName":"Operating Systems Concepts","courseDescription":"CS 5348 Operating Systems Concepts (3 semester credit hours) Processes and threads. Concurrency issues including semaphores, monitors and deadlocks. Simple memory management. Virtual memory management. CPU scheduling algorithms. I/O management. File management. Introduction to distributed systems. Must have a working knowledge of C and Unix. Prerequisite: CS 5330. Prerequisite or Corequisite: CS 5343. (3-0) S","coursePreReqs":["CS 5333","CS 5343"],"classType":"A","activeStatus":true},{"courseNumber":"CS 3341","courseName":"Probability and Statistics in Computer Science and Software Engineering","courseDescription":"CS 3341 Probability and Statistics in Computer Science and Software Engineering (3 semester credit hours) Axiomatic probability theory, independence, conditional probability. Discrete and continuous random variables, special distributions of importance to CS/SE, and expectation. Simulation of random variables and Monte Carlo methods. Central limit theorem. Basic statistical inference, parameter estimation, hypothesis testing, and linear regression. Introduction to stochastic processes. Illustrative examples and simulation exercises from queuing, reliability, and other CS/SE applications. Credit cannot be received for both courses, (CS 3341 or SE 3341 or STAT 3341) and ENGR 3341. Prerequisites: (MATH 1326 or MATH 2414 or MATH 2419), and (CE 2305 or CS 2305) with a grade of C or better. (Same as SE 3341 and STAT 3341) (3-0) S","coursePreReqs":[],"classType":"A","activeStatus":true},{"courseNumber":"SE 3341","courseName":"Probability and Statistics in Computer Science and Software Engineering","courseDescription":"SE 3341 Probability and Statistics in Computer Science and Software Engineering (3 semester credit hours) Axiomatic probability theory, independence, conditional probability. Discrete and continuous random variables, special distributions of importance to CS/SE, and expectation. Simulation of random variables and Monte Carlo methods. Central limit theorem. Basic statistical inference, parameter estimation, hypothesis testing, and linear regression. Introduction to stochastic processes. Illustrative examples and simulation exercises from queuing, reliability, and other CS/SE applications. Credit cannot be received for both courses, (CS 3341 or SE 3341 or STAT 3341) and ENGR 3341. Prerequisites: (MATH 1326 or MATH 2414 or MATH 2419), and (CE 2305 or CS 2305) with a grade of C or better. (Same as CS 3341 and STAT 3341) (3-0) S","coursePreReqs":[],"classType":"A","activeStatus":true},{"courseNumber":"CS 5390","courseName":"Computer Networks","courseDescription":"CS 5390 Computer Networks (3 semester credit hours) The design and analysis of protocols for computer networking. Topics include: network protocol design and composition via layering, contention resolution in multi-access networks, routing metrics and optimal path searching, traffic management, global network protocols; dealing with heterogeneity and scalability. Prerequisite: CS 5343. (3-0) S","coursePreReqs":["CS 5343"],"classType":"A","activeStatus":true},{"courseNumber":"CS 3354","courseName":"Software Engineering","courseDescription":"CS 3354 Software Engineering (3 semester credit hours) Introduction to software life cycle models. Software requirements engineering, formal specification and validation. Techniques for software design and testing. Cost estimation models. Issues in software quality assurance and software maintenance. Prerequisites: ((CE 2336 or CS 2336 or CS 2337) with a grade of C or better or CS 3333) and (CE 2305 or CS 2305) with a grade of C or better or equivalent. Prerequisite or Corequisite: ECS 3390. (Same as CE 3354 and SE 3354) (3-0) S","coursePreReqs":[],"classType":"E","activeStatus":true},{"courseNumber":"SE 5354","courseName":"Software Engineering","courseDescription":"SE 5354 Software Engineering (3 semester credit hours) Formal specification and program verification. Software life-cycle models and their stages. System and software requirements engineering; user-interface design. Software architecture, design, and analysis. Software testing, validation, and quality assurance. Prerequisite or Corequisite: CS 5343. (3-0) S","coursePreReqs":[],"classType":"A","activeStatus":true},{"courseNumber":"CS 5349","courseName":"Automata Theory","courseDescription":"CS 5349 Automata Theory (3 semester credit hours) Deterministic and nondeterministic finite automata; regular expressions, regular sets, context-free grammars, pushdown automata, context free languages. Selected topics from Turing Machines and undecidability. Prerequisite: CS 5333. (3-0) S","coursePreReqs":["CS 5333"],"classType":"A","activeStatus":true},{"courseNumber":"CS 6313","courseName":"Statistical Methods for Data Science","courseDescription":"CS 6313 (STAT 6313) Statistical Methods for Data Science (3 semester credit hours) Statistical methods for data science. Statistical Methods are developed at an intermediate level. Sampling distributions. Point and interval estimation. Parametric and nonparametric hypothesis testing. Analysis of variance. Regression, model building and model diagnostics. Monte Carlo simulation and bootstrap. Introduction to a statistical software package. Prerequisite: CS 3341 or SE 3341 or STAT 3341 or equivalent. (3-0) S","coursePreReqs":["CS 3341"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6350","courseName":"Big Data Management and Analytics","courseDescription":"CS 6350 Big Data Management and Analytics (3 semester credit hours) This course focuses on scalable data management and mining algorithms for analyzing very large amounts of data (i.e., Big Data). Included topics are: Mapreduce, NoSQL systems (e.g., key-value stores, column-oriented data stores, stream processing systems), association rule mining, large scale supervised and unsupervised learning, state of the art research in data streams, and applications including recommendation systems, web and big data security. Prerequisites: CS 6360 and Java programming. (3-0) S","coursePreReqs":["CS 6360"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6360","courseName":"Database Design","courseDescription":"CS 6360 Database Design (3 semester credit hours) Methods, principles, and concepts that are relevant to the practice of database software design. Database system architecture; conceptual database models; relational and object-oriented databases; database system implementation; query processing and optimization; transaction processing concepts, concurrency, and recovery; security. Prerequisite: CS 5343. (3-0) S","coursePreReqs":["CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6324","courseName":"Information Security","courseDescription":"CS 6324 Information Security (3 semester credit hours) A comprehensive study of security vulnerabilities in information systems and the basic techniques for developing secure applications and practicing safe computing. Topics include common attacking techniques such as buffer overflow, Trojan, virus, etc. UNIX, Windows and Java security. Conventional encryption. Hashing functions and data integrity. Public-key encryption (RSA, Elliptic-Curve). Digital signature. Watermarking for multimedia. Security standards and applications. Building secure software and systems. Management and analysis of security. Legal and ethical issues in computer security. Prerequisites: CS 5343 and CS 5348. (3-0) Y","coursePreReqs":["CS 5343","CS 5348"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6363","courseName":"Design and Analysis of Computer Algorithms","courseDescription":"CS 6363 Design and Analysis of Computer Algorithms (3 semester credit hours) The study of efficient algorithms for various computational problems. Algorithm design techniques. Sorting, manipulation of data structures, graphs, matrix multiplication, and pattern matching. Complexity of algorithms, lower bounds, NP completeness. Prerequisites: CS 5333 and CS 5343. (3-0) S","coursePreReqs":["CS 5333","CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6378","courseName":"Advanced Operating Systems","courseDescription":"CS 6363 Design and Analysis of Computer Algorithms (3 semester credit hours) The study of efficient algorithms for various computational problems. Algorithm design techniques. Sorting, manipulation of data structures, graphs, matrix multiplication, and pattern matching. Complexity of algorithms, lower bounds, NP completeness. Prerequisites: CS 5333 and CS 5343. (3-0) S","coursePreReqs":["CS 5343","CS 5348"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6332","courseName":"Systems Security and Malicious Code Analysis","courseDescription":"CS 6332 Systems Security and Malicious Code Analysis (3 semester credit hours) Concepts, techniques, and tools to capture the structure, format, and representation of binary code, and transform them for higher level analysis. Use of static analysis including data-flow analysis, point-to analysis, and shape analysis to reason about the abstractions inside binary code. Use of dynamic binary instrumentation to trace the instruction level behavior of both benign and malicious programs. Use of virtual machines to observe the whole system level behavior including OS kernels. Prerequisites: CS 5343 and CS 5348 and knowledge of Assembly Code. (3-0) Y","coursePreReqs":["CS 5343","CS 5348"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6348","courseName":"Data and Applications Security","courseDescription":"CS 6348 Data and Applications Security (3 semester credit hours) The course will teach principles, technologies, tools and trends for data, and applications security and privacy. Topics to be covered include: confidentiality, privacy and trust management; advanced access control policy management; secure databases; secure distributed systems; encryption techniques for database security; blockchain based techniques for ensuring data integrity; data privacy; privacy-preserving data mining. Students will take one system or application and develop a secure version of that system or application for the programming project. Prerequisite: CS 5343. (3-0) Y","coursePreReqs":["CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6349","courseName":"Network Security","courseDescription":"CS 6349 Network Security (3 semester credit hours) This course covers theoretical and practical aspects of network security. The topics include use of cryptography for building secure communication protocols and authentication systems; security handshake pitfalls, Kerberos and PKI, security of TCP/IP protocols including IPsec, BGP security, VPNs, IDSes, firewalls, and anonymous routing; security of TCP/IP applications; wireless LAN security; denial-of-service defense. Students are required to do a programming project building a distributed application with certain secure communication features and required to participate in several network security lab exercises and cyber war games. Prerequisites: CS 5390. (3-0) Y","coursePreReqs":["CS 5390"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6377","courseName":"Introduction to Cryptography","courseDescription":"CS 6377 Introduction to Cryptography (3 semester credit hours) This course covers the basic aspects of modern cryptography, including block ciphers, pseudorandom functions, symmetric encryption, Hash functions, message authentication, number-theoretic primitives, public-key encryption, digital signatures and zero knowledge proofs. Prerequisites: CS 5333 and CS 5343 and ENCS majors only. (3-0) T","coursePreReqs":["CS 5333","CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6320","courseName":"Natural Language Processing","courseDescription":"CS 6320 Natural Language Processing (3 semester credit hours) This course covers state-of-the-art methods for natural language processing. After an introduction to the basics of syntax, semantic, and discourse analysis, the focus shifts to the integration of these modules into natural-language processing systems. In addition to natural language understanding, the course presents advanced material on lexical knowledge acquisition, natural language generation, machine translation, and parallel processing of natural language. Prerequisite: CS 5343. (3-0) Y","coursePreReqs":["CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6364","courseName":"Artificial Intelligence","courseDescription":"CS 6364 Artificial Intelligence (3 semester credit hours) Design of machines that exhibit intelligence. Particular topics include: representation of knowledge, vision, natural language processing, search, logic and deduction, expert systems, planning, language comprehension, and machine learning. Prerequisite: CS 5343. (3-0) Y","coursePreReqs":["CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6375","courseName":"Machine Learning","courseDescription":"CS 6375 Machine Learning (3 semester credit hours) Algorithms for training perceptions and multi-layer neural nets: back propagation, Boltzmann machines, and self-organizing nets. The ID3 and the Nearest Neighbor algorithms. Formal models for analyzing learnability: exact identification in the limit and probably approximately correct (PAC) identification. Computational limitations of learning machines. Prerequisite: CS 5343. (3-0) Y","coursePreReqs":["CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6326","courseName":"Human Computer Interactions","courseDescription":"CS 6326 Human Computer Interactions (3 semester credit hours) In-depth exploration of human-computer interactions (HCI). Models and principles of HCI. The user experience (UX) lifecycle and design guidelines for a wide variety of advanced interfaces, such as mobile devices and 3D sensors. UX evaluation of interface designs. Prerequisite: CS 5343. (3-0) Y","coursePreReqs":["CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6323","courseName":"Computer Animation and Gaming","courseDescription":"CS 6323 Computer Animation and Gaming (3 semester credit hours) Theoretical foundations and programming techniques involved in computer animation and game engines. Specific topics include 2D and 3D transformations, skeletons, forward and inverse kinematics, skinning, keyframing, particle systems, rigid bodies, cloth animation, collision detection, and animation for video games. Prerequisites: CS 5343 and a good working knowledge of C++ and graphical programming (either OpenGL, DirectX, or Java3D). (3-0) Y","coursePreReqs":["CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6328","courseName":"Modeling and Simulation","courseDescription":"CS 6328 Modeling and Simulation (3 semester credit hours) Theory and practice of modeling, including models for concepts, knowledge, geometry, and dynamics. A variety of model types are covered along with their algebraic and diagrammatic representations. Creative media design and representation of models is stressed. Prerequisite: CS 5343 or instructor consent required. (3-0) R","coursePreReqs":["CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6331","courseName":"Multimedia Systems","courseDescription":"CS 6331 Multimedia Systems (3 semester credit hours) Analyzing and understanding how different media data (such as text, audio, images, video, and 3D graphics) can be stored, queried, delivered, and consumed. These aspects will be discussed from the point of view of the operating system, databases, and networking. Prerequisite: CS 5343. (3-0) Y","coursePreReqs":["CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6334","courseName":"Virtual Reality","courseDescription":"CS 6334 Virtual Reality (3 semester credit hours) Theory and practice of virtual reality (VR). Provides in-depth overview of VR, including input devices, output devices, 3D navigation techniques, 3D selection and manipulation techniques, system control techniques, interaction fidelity, scenario fidelity, display fidelity, design guidelines, and evaluation methods. Prerequisite: CS 5343. (3-0) Y","coursePreReqs":["CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6366","courseName":"Computer Graphics","courseDescription":"CS 6366 Computer Graphics (3 semester credit hours) Device and logical coordinate systems. Geometric transformations in two and three dimensions. Algorithms for basic 2-D drawing primitives, such as Brensenham\u0027s algorithm for lines and circles, Bezier and B-Spline functions for curves, and line and polygon clipping algorithms. Perspectives in 3-D, and hidden-line and hidden-face elimination, such as Painter\u0027s and Z-Buffer algorithms. Fractals and the Mandelbrot set. Prerequisites: CS 5330 and CS 5343 and MATH 2418. (3-0) Y","coursePreReqs":["CS 5343","CS 5330"],"classType":"C","activeStatus":true},{"courseNumber":"CS 5330","courseName":"Computer Science II","courseDescription":"CS 5330 Computer Science II (3 semester credit hours) Basic concepts of computer organization: Numbering systems, two\u0027s complement notation, multi-level machine concepts, machine language, assembly programming and optimization, subroutine calls, addressing modes, code generation process, CPU datapath, pipelining, RISC, CISC, and performance calculation. Prerequisite or Corequisite: CS 5303. (3-0) R","coursePreReqs":["CS 5303"],"classType":"A","activeStatus":true},{"courseNumber":"CS 6352","courseName":"Performance of Computer Systems and Networks","courseDescription":"CS 6352 Performance of Computer Systems and Networks (3 semester credit hours) Overview of case studies. Quick review of principles of probability theory. Queuing models and physical origin of random variables used in queuing models. Various important cases of the M/M/m/N queuing system. Little\u0027s law. The M/G/1 queuing system. Simulation of queuing systems. Product form solutions of open and closed queuing networks. Convolution algorithms and Mean Value Analysis for closed queuing networks. Discrete time queuing systems. Prerequisites: ENCS majors only and a first course on probability theory. (3-0) S","coursePreReqs":[],"classType":"C","activeStatus":true},{"courseNumber":"CS 6385","courseName":"Algorithmic Aspects of Telecommunication Networks","courseDescription":"CS 6385 (TE 6385) Algorithmic Aspects of Telecommunication Networks (3 semester credit hours) This is an advanced course on topics related to the design, analysis, and development of telecommunications systems and networks. The focus is on the efficient algorithmic solutions for key problems in modern telecommunications networks, in centralized and distributed models. Topics include: main concepts in the design of distributed algorithms in synchronous and asynchronous models, analysis techniques for distributed algorithms, centralized and distributed solutions for handling design and optimization problems concerning network topology, architecture, routing, survivability, reliability, congestion, dimensioning and traffic management in modern telecommunication networks. Prerequisites: CS 5343 and CS 5348 and (CS 3341 or ENGR 3341 or equivalent). (3-0) Y","coursePreReqs":["CS 5343","CS 5348"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6390","courseName":"Advanced Computer Networks","courseDescription":"CS 6390 Advanced Computer Networks (3 semester credit hours) Survey of recent advancements in high-speed network technologies. Application of quantitative approach to the study of broadband integrated networks including admission control, access control, and quality of service guarantee. Prerequisite: CS 5390. (3-0) S","coursePreReqs":["CS 5390"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6304","courseName":"Computer Architecture","courseDescription":"CS 6304 (CE 6304 and EEDG 6304) Computer Architecture (3 semester credit hours) Trends in processor, memory, I/O and system design. Techniques for quantitative analysis and evaluation of computer systems to understand and compare alternative design choices in system design. Components in high performance processors and computers: pipelining, instruction level parallelism, memory hierarchies, and input/output. Students will undertake a major computing system analysis and design project. Must have an understanding of C/C++. Prerequisite: CS 2340 or EE 4304. (3-0) Y","coursePreReqs":["CS 2340"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6396","courseName":"Real-Time Systems","courseDescription":"CS 6396 (CE 6308 and EEDG 6308) Real-Time Systems (3 semester credit hours) Introduction to real-time applications and concepts. Real-time operating systems and resource management. Specification and design methods for real-time systems. System performance analysis and optimization techniques. Project to specify, analyze, design, implement and test small real-time system. Prerequisite: CS 5348. (3-0) R","coursePreReqs":["CS 5348"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6376","courseName":"Parallel Processing","courseDescription":"CS 6376 Parallel Processing (3 semester credit hours) Topics include parallel processing, parallel machine models, parallel algorithms for sorting, searching and matrix operations. Parallel graph algorithms. Prerequisite: CS 5343. (3-0) T","coursePreReqs":["CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6380","courseName":"Distributed Computing","courseDescription":"CS 6380 Distributed Computing (3 semester credit hours) Topics include distributed algorithms, election algorithms, synchronizers, mutual exclusion, resource allocation, deadlocks, Byzantine agreement and clock synchronization, knowledge and common knowledge, reliability in distributed networks, and proving distributed programs correct. Prerequisite: CS 5348. (3-0) S","coursePreReqs":["CS 5348"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6397","courseName":"Synthesis and Optimization of High-Performance Systems","courseDescription":"CS 6397 Synthesis and Optimization of High-Performance Systems (3 semester credit hours) A comprehensive study of high-level synthesis and optimization algorithms for designing high performance systems with multiple CPUs or functional units for critical applications such as Multimedia, Signal processing, Telecommunications, Networks, and Graphics applications, etc. Topics including algorithms for architecture-level synthesis, scheduling, resource binding, real-time systems, parallel processor array design and mapping, code generations for DSP processors, embedded systems and hardware/software codesigns. Prerequisite: CS 5343. (3-0) T","coursePreReqs":["CS 5343"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6353","courseName":"Compiler Construction","courseDescription":"CS 6353 Compiler Construction (3 semester credit hours) Lexical analyzers, context-free grammars. Top-down and bottom-up parsing; shift reduce and LR parsing. Operator-precedence, recursive-descent, predictive, and LL parsing. LR(k), LL(k) and precedence grammars will be covered. Prerequisites: CS 5343 and CS 5349. (3-0) Y","coursePreReqs":["CS 5343","CS 5349"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6371","courseName":"Advanced Programming Languages","courseDescription":"CS 6371 Advanced Programming Languages (3 semester credit hours) Functional programming, Lambda calculus, logic programming, abstract syntax, denotational semantics of imperative languages, fixpoints semantics, verification of programs, partial evaluation, interpretation and automatic compilation, axiomatic semantics, applications of semantics to software engineering. Prerequisites: CS 5343 and CS 5349. (3-0) S","coursePreReqs":["CS 5343","CS 5349"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6340","courseName":"Wireless Networks","courseDescription":"CS 6340 Wireless Networks (3 semester credit hours) Fundamental techniques in design and operation of the 2G-5G wireless cellular networks and wireless LANs, including the control and the data planes. Introduction to future technologies, such as 6G and IoT. The course is a mix of qualitative and quantitative presentation. Prerequisites: CS 5390 and (CS 3341 or SE 3341 or STAT 3341) or equivalent. (3-0) Y","coursePreReqs":["CS 5390"],"classType":"C","activeStatus":true},{"courseNumber":"CS 6301","courseName":"Special Topics in Computer Science [when topic is Secure Cloud Computing","courseDescription":"CS 6301 Special Topics in Computer Science (3 semester credit hours) May be repeated for credit as topics vary. Prerequisite: CS 5343. (3-0) S","coursePreReqs":["CS 5343"],"classType":"E","activeStatus":true},{"courseNumber":"CS 7301","courseName":"Recent Advances in Computing [when topic is Cyber-physical Systems Security","courseDescription":"CS 7301 (SE 7301) Recent Advances in Computing (3 semester credit hours) Advanced topics and publications will be selected from the theory, design, and implementation issues in computing. May be repeated for credit as topics vary. Prerequisites: ENCS majors only and instructor consent required. (3-0) Y","coursePreReqs":[],"classType":"E","activeStatus":true},{"courseNumber":"CS 4397","courseName":"Embedded Computer System","courseDescription":"CS 4397 Embedded Computer Systems (3 semester credit hours) Introduction to embedded computer applications and concepts. Real-time operating systems and resource management. Real-time scheduling and communication. Senior data acquisition, processing and fusion. Error handling, fault tolerance, and graceful degradation. System performance analysis and optimization techniques. Includes a project to develop and analyze a small embedded computer application. Prerequisite: (CE 4348 or CS 4348 or SE 4348) or equivalent. (3-0) Y","coursePreReqs":[],"classType":"E","activeStatus":true},{"courseNumber":"CS 4398","courseName":"Digital Forensics","courseDescription":"CS 4398 Digital Forensics (3 semester credit hours) Creating and preserving digital evidence, data recovery and evidence collection algorithms, evidence construction and reconstruction, methods for certifying evidence, storing evidence, data acquisition, forensic analysis algorithms, image files, network forensics, logging methods to trace back attacks and digital trails, e-mail investigations. Prerequisites: (CE 4348 or CS 4348 or SE 4348) and (CE 4390 or CS 4390) or equivalent. (3-0) Y","coursePreReqs":[],"classType":"E","activeStatus":true}]